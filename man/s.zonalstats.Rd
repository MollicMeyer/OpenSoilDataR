% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s.zonalstats.R
\name{s.zonalstats}
\alias{s.zonalstats}
\title{Compute Zonal Statistics for Multiple Soil Products}
\usage{
s.zonalstats(
  soil_data,
  tdepth = 0,
  bdepth = 20,
  props = c("sand", "clay"),
  shapes = plots,
  plots = c("NW_plot", "SW_plot"),
  stats = c("mean", "min", "max", "sd"),
  wtd.mean = TRUE,
  MakePlot = FALSE,
  output_dir = NULL
)
}
\arguments{
\item{soil_data}{A `SpatRaster` or list of `SpatRaster` objects from `fetch_PSP`, `fetch_SG2`, or `fetch_SOL`.}

\item{tdepth}{Numeric. Top depth of interest (cm).}

\item{bdepth}{Numeric. Bottom depth of interest (cm).}

\item{props}{Character vector. Standardized soil properties (e.g., `"clay"`, `"sand"`, `"bd"`).}

\item{shapes}{`sf` or `SpatVector`. Polygon boundaries for statistics. **The "Name" field must match plot names.**}

\item{plots}{Character vector. Names of plots to process (must match `shapes$Name`).}

\item{stats}{Character vector. Statistics to calculate (`"mean"`, `"min"`, `"max"`, `"sd"`).}

\item{wtd.mean}{Logical. If `TRUE`, computes depth-weighted mean across specified depth range.}

\item{MakePlot}{Logical. If `TRUE`, generates raster plots for each statistic.}

\item{output_dir}{Character. Directory to save output files. Set to `NULL` to disable file saving.}
}
\value{
A list containing:
  - `$Unweighted`: Data frame of zonal statistics per depth interval.
  - `$Weighted`: Data frame of depth-weighted means (if `wtd.mean = TRUE`).
}
\description{
This function calculates zonal statistics for soil property rasters from POLARIS (PSP),
SoilGrids v2 (SG2), SOLUS100 (SOL), and CSRL Soil props 800. It ensures that depth intervals from different
datasets are consistently translated, and supports depth-weighted averaging.
}
\section{Property Lookup}{

**Standardized soil properties across datasets.**

\preformatted{
property_lookup <- list(
# Bulk Density
"bd" = c(PSP = "bd_mean", SG2 = "bdod", SOL = "dbovendry", CSRL = "bulk_density"),
# Soil Texture (Sand, Silt, Clay)
"clay" = c(PSP = "clay_mean", SG2 = "clay", SOL = "claytotal", CSRL = "clay_profile"),
"sand" = c(PSP = "sand_mean", SG2 = "sand", SOL = "sandtotal", CSRL = "sand_profile"),
"silt" = c(PSP = "silt_mean", SG2 = "silt", SOL = "silttotal", CSRL = "silt_profile"),
# Soil Organic Matter / Carbon
"som" = c(PSP = "om_mean", SG2 = NA, SOL = NA, CSRL = "som_max"),
"soc" = c(PSP = "soc", SG2 = "soc", SOL = "soc_max", CSRL = "soc_max"),
"soc_stock" = c(PSP = NA, SG2 = "ocs", SOL = NA, CSRL = "soc_stock"),
"som_stock" = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = "som_stock"),
"ph" = c(PSP = "ph_mean", SG2 = "phh2o", SOL = "ph1to1h2o", CSRL = "ph_profile"),
"cec" = c(PSP = NA, SG2 = "cec", SOL = "cec7", CSRL = "cec_profile"),
"ec" = c(PSP = NA, SG2 = NA, SOL = "ec", CSRL = "ec_profile"),
"sar" = c(PSP = NA, SG2 = NA, SOL = "sar", CSRL = "sar"),
"caco3" = c(PSP = NA, SG2 = NA, SOL = "caco3", CSRL = "caco3"),
"gypsum" = c(PSP = NA, SG2 = NA, SOL = "gypsum", CSRL = NA),
# Hydrology & Conductivity
"ksat" = c(PSP = "ksat_mean", SG2 = NA, SOL = NA, CSRL = "ksat_max"),
"theta_s" = c(PSP = "theta_s_mean", SG2 = NA, SOL = NA, CSRL = NA),
"theta_r" = c(PSP = "theta_r_mean", SG2 = NA, SOL = NA, CSRL = NA),
# Coarse Fragments & Rock Volume
"coarse_fragments" = c(PSP = NA, SG2 = "cfvo", SOL = "fragvol", CSRL = "rf_025"),
"wind_erodibility_group" = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = "wind_erodibility_group"),
"wind_erodibility_index" = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = "wind_erodibility_index"),
"soil_order" = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = "soil_order"),
"soil_temp_regime" = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = "soil_temp_regime")
}
}

\examples{
\dontrun{
# Load required libraries
library(terra)
library(sf)

# Load polygon shapefile
plot_shapes <- st_read("path/to/plots.shp")

# Fetch PSP soil data
psp_data <- fetch_PSP(aoi = plot_shapes, properties = c("clay_mean", "sand_mean"), depths = c("0_5", "5_15", "15_30"))

# Compute zonal statistics
results <- s.zonalstats(
  soil_data = psp_data,
  tdepth = 0, bdepth = 20,
  props = c("clay", "sand"),
  shapes = plot_shapes,
  plots = c("NW_plot", "SW_plot"),
  stats = c("mean", "min", "max", "sd"),
  wtd.mean = TRUE,
  MakePlot = TRUE,
  output_dir = "path/to/output"
)

# View results
head(results$Unweighted)
head(results$Weighted)
}
}
