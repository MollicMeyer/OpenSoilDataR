% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s.zonalstats.R
\name{s.zonalstats}
\alias{s.zonalstats}
\title{Compute Zonal Statistics for Multiple Soil Products}
\usage{
s.zonalstats(
  soil_data,
  tdepth = 0,
  bdepth = 20,
  props = c("sand", "clay"),
  shapes = plots,
  plots = c("NW_plot", "SW_plot"),
  stats = c("mean", "min", "max", "sd"),
  wtd.mean = TRUE,
  MakePlot = FALSE,
  output_dir = NULL
)
}
\arguments{
\item{soil_data}{A \code{SpatRaster} or list of \code{SpatRaster} objects from \code{fetch_PSP}, \code{fetch_SG2}, \code{fetch_SOL} or \code{fetch_SGO}.}

\item{tdepth}{Numeric. Top depth of interest (cm).}

\item{bdepth}{Numeric. Bottom depth of interest (cm).}

\item{props}{Character vector. Standardized soil properties (e.g., \code{"clay"}, \code{"sand"}, \code{"bd"}).}

\item{shapes}{\code{sf} or \code{SpatVector}. Polygon boundaries for statistics. \strong{The "Name" field must match plot names.}}

\item{plots}{Character vector. Names of plots to process (must match \code{shapes$Name}).}

\item{stats}{Character vector. Statistics to calculate (\code{"mean"}, \code{"min"}, \code{"max"}, \code{"sd"}).}

\item{wtd.mean}{Logical. If \code{TRUE}, computes depth-weighted mean across specified depth range.}

\item{MakePlot}{Logical. If \code{TRUE}, generates raster plots for each statistic.}

\item{output_dir}{Character. Directory to save output files. Set to \code{NULL} to disable file saving.

#' @section Property Lookup:
\strong{Standardized soil properties across datasets.}

\preformatted{
property_lookup <- list(
# Water Retention
"wtenthbar"      = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "wtenthbar_r"),
"wthirdbar"      = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "wthirdbar_r"),
"wfifteenbar"    = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "wfifteenbar_r"),
"awc"            = c(PSP = NA, SG2 = NA, SOL = "awc_r", CSRL = NA, SGO = "awc_r"),

# Phosphorus
"pbray1"         = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "pbray1_r"),
"ptotal"         = c(PSP = NA, SG2 = NA, SOL = "ptotal_r", CSRL = NA, SGO = "ptotal_r"),
"ph2osoluble"    = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "ph2osoluble_r"),
"poxalate"       = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "poxalate_r"),

# Bulk Density
"bd"             = c(PSP = "bd_mean", SG2 = "bdod", SOL = "dbovendry_r", CSRL = "bulk_density", SGO = "dbovendry_r"),
"bd_tenthbar"    = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "dbtenthbar_r"),
"bd_thirdbar"    = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "dbthirdbar_r"),
"bd_fifteenbar"  = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "dbfifteenbar_r"),

# Texture
"clay"           = c(PSP = "clay_mean", SG2 = "clay", SOL = "claytotal", CSRL = "clay_profile", SGO = "claytotal_r"),
"sand"           = c(PSP = "sand_mean", SG2 = "sand", SOL = "sandtotal", CSRL = "sand_profile", SGO = "sandtotal_r"),
"silt"           = c(PSP = "silt_mean", SG2 = "silt", SOL = "silttotal", CSRL = "silt_profile", SGO = "silttotal_r"),
"sandco"         = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "sandco_r"),
"sandfine"       = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "sandfine_r"),
"sandmed"        = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "sandmed_r"),
"sandvc"         = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "sandvc_r"),
"sandvf"         = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "sandvf_r"),
"siltco"         = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "siltco_r"),
"siltfine"       = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "siltfine_r"),

# Organic Carbon
"som"            = c(PSP = "om_mean", SG2 = NA, SOL = NA, CSRL = "som_max", SGO = "om_r"),
"soc"            = c(PSP = "soc", SG2 = "soc", SOL = "soc", CSRL = "soc_max", SGO = "oc_r"),
"soc_stock"      = c(PSP = NA, SG2 = "ocs", SOL = NA, CSRL = "soc_stock", SGO = NA),

# Chemistry
"ph"             = c(PSP = "ph_mean", SG2 = "phh2o", SOL = "ph1to1h2o", CSRL = "ph_profile", SGO = "ph1to1h2o_r"),
"ph_cacl2"       = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "ph01mcacl2_r"),
"ph_oxidized"    = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "phoxidized_r"),
"cec"            = c(PSP = NA, SG2 = "cec", SOL = "cec7", CSRL = "cec_profile", SGO = "cec7_r"),
"ecec"           = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "ecec_r"),
"ec"             = c(PSP = NA, SG2 = NA, SOL = "ec", CSRL = "ec_profile", SGO = "ec_r"),
"ec15"           = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "ec15_r"),
"esp"            = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "esp_r"),
"sar"            = c(PSP = NA, SG2 = NA, SOL = "sar", CSRL = "sar", SGO = "sar_r"),
"gypsum"         = c(PSP = NA, SG2 = NA, SOL = "gypsum", CSRL = NA, SGO = "gypsum_r"),
"caco3"          = c(PSP = NA, SG2 = NA, SOL = "caco3", CSRL = "caco3", SGO = "caco3_r"),

# Extractables
"extracid"       = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "extracid_r"),
"extral"         = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "extral_r"),
"aloxalate"      = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "aloxalate_r"),
"feoxalate"      = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "feoxalate_r"),

# Mechanics
"lep"            = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "lep_r"),
"ll"             = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "ll_r"),
"pi"             = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "pi_r"),

# Rock Fragments
"frag3to10"      = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "frag3to10_r"),
"fraggt10"       = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "fraggt10_r"),

# Fiber
"fiberrubbedpct" = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "fiberrubbedpct_r"),
"fiberunrubbedpct" = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "fiberunrubbedpct_r"),

# Sieve
"sieveno10"      = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "sieveno10_r"),
"sieveno200"     = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "sieveno200_r"),
"sieveno4"       = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "sieveno4_r"),
"sieveno40"      = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "sieveno40_r"),

# Hydrology
"ksat"           = c(PSP = "ksat_mean", SG2 = NA, SOL = NA, CSRL = "ksat_max", SGO = "ksat_r"),
"wsatiated"      = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "wsatiated_r"),
# Erosion
"kw"             = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "kwfact"),
"kffact"         = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "kffact"),
"kifact"         = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "kifact"),
"krfact"         = c(PSP = NA, SG2 = NA, SOL = NA, CSRL = NA, SGO = "krfact")
)
}}
}
\value{
A list containing:
\itemize{
\item \verb{$Unweighted}: Data frame of zonal statistics per depth interval.
\item \verb{$Weighted}: Data frame of depth-weighted means (if \code{wtd.mean = TRUE}).
}
}
\description{
This function calculates zonal statistics for soil property rasters from POLARIS (PSP),
SoilGrids v2 (SG2), SOLUS100 (SOL), CSRL Soil props 800, and SSURGO/gNATSGO/RSS (SGO). It ensures that depth intervals from different
datasets are consistently translated, and supports depth-weighted averaging.
}
\examples{
\dontrun{
# Load required libraries
library(terra)
library(sf)

# Load polygon shapefile
plot_shapes <- st_read("path/to/plots.shp")

# Fetch PSP soil data
psp_data <- fetch_PSP(aoi = plot_shapes, properties = c("clay_mean", "sand_mean"), depths = c("0_5", "5_15", "15_30"))

# Compute zonal statistics
results <- s.zonalstats(
  soil_data = psp_data,
  tdepth = 0, bdepth = 20,
  props = c("clay", "sand"),
  shapes = plot_shapes,
  plots = c("NW_plot", "SW_plot"),
  stats = c("mean", "min", "max", "sd"),
  wtd.mean = TRUE,
  MakePlot = TRUE,
  output_dir = "path/to/output"
)

# View results
head(results$Unweighted)
head(results$Weighted)
}
}
