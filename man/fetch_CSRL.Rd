% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_CSRL.R
\name{fetch_CSRL}
\alias{fetch_CSRL}
\title{Download and Process CSRL Soil Property Data}
\usage{
fetch_CSRL(
  aoi,
  properties,
  depths = NULL,
  output_dir = NULL,
  suffix = "",
  crs = "EPSG:4326",
  scale = 800,
  tosoc = FALSE,
  export = TRUE
)
}
\arguments{
\item{aoi}{SpatRaster, SpatVector, or file path to a shapefile. The area of interest.}

\item{properties}{Character vector. List of soil properties to download (see \strong{Lookup Table} below).}

\item{depths}{Character vector. Depth intervals to download (e.g., \code{"0-5"}, \code{"0-25"}, \code{"30-60"}).
Required only for \verb{_profile} properties.}

\item{output_dir}{Character. Directory where files will be saved. Set to \code{NULL} to keep only in memory.}

\item{suffix}{Character. Optional suffix for file names.}

\item{crs}{Character. Coordinate reference system for the output. Default is \code{"EPSG:4326"}.}

\item{scale}{Numeric. Resolution in meters. Default is \code{800} (coarse for regional analysis).}

\item{tosoc}{Logical. If \code{TRUE}, converts Organic Matter (\code{som} or \code{som_max})
to Soil Organic Carbon (SOC) using the Van Bemmelen factor (1.724).}

\item{export}{Logical. If \code{TRUE}, saves downloaded rasters to \code{output_dir}. Default is \code{TRUE}.}
}
\value{
A list containing:
\describe{
\item{\code{stack}}{A \code{SpatRaster} containing all downloaded layers.}
\item{\code{file_paths}}{A character vector of file paths (if \code{export = TRUE}).}
\item{\code{product}}{A character string \code{"CSRL"} identifying the dataset.}
}
}
\description{
Downloads specified soil property data from the \strong{CSRL Soil Properties Dataset} on Google Earth Engine (GEE),
loads the rasters into memory, and optionally saves them to disk.
}
\details{
\strong{⚠️ Note:} This dataset is intended for \strong{statewide and regional soil analysis}.
For \strong{local-scale, fine-resolution soil data}, refer to \strong{SSURGO (Soil Survey Geographic Database)}.

This function accesses the \strong{CSRL Soil Properties Dataset} in \strong{Google Earth Engine (GEE)},
providing \strong{bulk density, cation exchange capacity (CEC), sand/silt/clay fractions, soil organic matter (SOM),
saturated hydraulic conductivity (Ksat), pH, and other soil properties}.

\strong{Important:} \verb{_profile} datasets contain multi-depth image collections.
You must specify a depth for these properties (e.g., \code{"0-25"}, \code{"30-60"}).
\subsection{CSRL Soil Property Lookup Table}{\tabular{lll}{
   Category \tab Property Name \tab Uses Depths? \cr
   \strong{Chemical} \tab \code{"caco3"} \tab No \cr
    \tab \code{"cec"} \tab No \cr
    \tab \code{"cec_profile"} \tab Yes (\code{0-5}, \code{0-25}, \code{0-50}) \cr
    \tab \code{"ec"} \tab No \cr
    \tab \code{"ph_profile"} \tab Yes (\code{0-5}, \code{0-25}, \code{25-50}, \code{30-60}) \cr
    \tab \code{"sar"} \tab No \cr
    \tab \code{"som"} \tab No \cr
   \strong{Physical} \tab \code{"bulk_density"} \tab No \cr
    \tab \code{"clay_profile"} \tab Yes (\code{0-5}, \code{0-25}, \code{25-50}, \code{30-60}) \cr
    \tab \code{"ksat_max"} \tab No \cr
    \tab \code{"sand_profile"} \tab Yes (\code{0-5}, \code{0-25}, \code{25-50}, \code{30-60}) \cr
    \tab \code{"silt_profile"} \tab Yes (\code{0-5}, \code{0-25}, \code{25-50}, \code{30-60}) \cr
   \strong{Land Use} \tab \code{"soil_order"} \tab No \cr
    \tab \code{"soil_temp_regime"} \tab No \cr
    \tab \code{"wind_erodibility_group"} \tab No \cr
}

}
}
\examples{
\dontrun{
# Load required libraries
library(terra)
library(sf)
# Authenticate and initialize Google Earth Engine
gd_authenticate(auth_mode = "notebook")
gd_initialize()

# Define AOI and output directory
output_directory <- "path/to/output"
aoi_raster <- rast("path_to_aoi.tif")

# Fetch CSRL soil data (Profile & Non-Profile Properties)
csrl_data <- fetch_CSRL(
  aoi = aoi_raster,
  properties = c("sand_profile", "caco3", "ksat_max"),
  depths = c("0-25", "30-60"),  # Required only for profile datasets
  output_dir = output_directory,
  scale = 800,  # Default - for regional analysis
  suffix = "",
  export = TRUE
)

# View downloaded raster stack
plot(csrl_data$stack)
}
}
